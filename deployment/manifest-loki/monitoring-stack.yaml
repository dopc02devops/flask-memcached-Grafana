
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
data:
  local-config.yaml: |
    # Add your Loki configuration here
    auth_enabled: false
    common:
      path_prefix: /loki
    server:
      http_listen_port: 3100
    distributor:
      ring:
        kvstore:
          store: inmemory
    ingester:
      lifecycler:
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    storage_config:
      boltdb_shipper:
        active_index_directory: /loki/index
        cache_location: /loki/cache
      filesystem:
        directory: /loki/chunks
    compactor:
      working_directory: /loki/compactor
    limits_config:
      max_streams_per_user: 1000
      allow_structured_metadata: false
    table_manager:
      retention_deletes_enabled: true

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    # Add your Prometheus configuration here
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'loki'
        static_configs:
          - targets: ['loki:3100']

      - job_name: 'promtail'
        static_configs:
          - targets: ['promtail:9080']
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
data:
  promtail-config.yaml: |
    # Add your Promtail configuration here
    server:
      http_listen_port: 9080

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki:3100/loki/api/v1/push

    scrape_configs:
      - job_name: system
        static_configs:
          - targets:
              - localhost
            labels:
              job: varlogs
              __path__: /var/log/*.log

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
spec:
  serviceName: loki
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
    spec:
      containers:
        - name: loki
          image: grafana/loki:latest
          ports:
            - containerPort: 3100
          volumeMounts:
            - name: loki-config-volume
              mountPath: /etc/loki
            - name: loki-data
              mountPath: /loki
      volumes:
        - name: loki-config-volume
          configMap:
            name: loki-config
        - name: loki-data
          persistentVolumeClaim:
            claimName: loki-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: loki
spec:
  ports:
    - protocol: TCP
      port: 3100
      targetPort: 3100
  selector:
    app: loki

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-config

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  selector:
    app: prometheus

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
          volumeMounts:
            - name: grafana-config-volume
              mountPath: /etc/grafana/provisioning
      volumes:
        - name: grafana-config-volume
          configMap:
            name: grafana-config

---

apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  selector:
    app: grafana

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
spec:
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      containers:
        - name: promtail
          image: grafana/promtail:latest
          volumeMounts:
            - name: promtail-config-volume
              mountPath: /etc/promtail
      volumes:
        - name: promtail-config-volume
          configMap:
            name: promtail-config
      initContainers:
        - name: init-promtail
          image: busybox
          command: ["sh", "-c", "echo Init Container for Promtail"]

---

apiVersion: v1
kind: Service
metadata:
  name: promtail
spec:
  ports:
    - protocol: TCP
      port: 3101
      targetPort: 3101
  selector:
    app: promtail
