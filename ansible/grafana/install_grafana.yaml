#!/usr/bin/env -S ansible-playbook -K
# NOTE: Don't provide the playbook filename in the shebang. It is added automatically.
---

- name: Configure Grafana Playbook
  hosts: master
  remote_user: kube_user
  become: yes
  become_user: root
  gather_facts: true

  tasks:
    - name: Ensure 'kube_user' exists
      user:
        name: kube_user
        state: present

    - name: Allow 'kube_user' to use sudo without a password
      lineinfile:
        dest: /etc/sudoers
        line: 'kube_user ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: Update apt package cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - iptables-persistent
        state: present
        update_cache: yes

    - name: Add Docker's official GPG key and repository
      block:
        - name: Add Docker's GPG key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker repository
          apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            state: present

    - name: Install Docker and Docker Compose plugin
      apt:
        name:
          - docker-ce
          - docker-compose-plugin
        state: present

    - name: Ensure Docker service is running and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create docker group if it does not exist
      group:
        name: docker
        state: present

    - name: Add 'kube_user' to the docker group
      user:
        name: kube_user
        groups: docker
        append: yes

    - name: Copy ./loki directory to /home/kube_user
      copy:
        src: ../../loki
        dest: /home/kube_user/loki
        owner: kube_user
        group: kube_user
        mode: "0755"

    - name: Run docker-compose up
      shell: |
        docker compose up -d
      args:
        chdir: /home/kube_user/loki/
      become: yes
      become_user: kube_user

    - name: Verify docker-compose services are running
      shell: |
        docker compose ps
      args:
        chdir: /home/kube_user/loki/
      register: docker_compose_status
      become: yes
      become_user: kube_user

    - name: Check if all services are up
      debug:
        msg: "{{ docker_compose_status.stdout }}"
      failed_when: "'Up' not in docker_compose_status.stdout"

    - name: Redirect port 3000 to 4000 on localhost
      iptables:
        chain: PREROUTING
        table: nat
        in_interface: lo
        protocol: tcp
        destination_port: 4000
        jump: REDIRECT
        to_ports: 3000

    - name: Ensure iptables rule persists
      shell: |
        iptables-save > /etc/iptables/rules.v4
